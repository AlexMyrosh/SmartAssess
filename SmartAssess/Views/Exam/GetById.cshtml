@model Presentation_Layer.ViewModels.ExamViewModel

@{
    ViewData["Title"] = "GetById";
}

<h1>GetById</h1>

<div>
    <h4>ExamViewModel</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Subject)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Subject)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExamStartDateTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExamStartDateTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExamEndDateTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExamEndDateTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExamDuration)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExamDuration)
        </dd>
        
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Questions)
        </dt>
        <dd class="col-sm-10">
            @foreach(var question in Model.Questions)
            {
                @Html.DisplayTextFor(_ => question.QuestionText)
                <br />
            }
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Update", "Update", new { id = Model.Id }, new { @class = "btn btn-outline-primary" })
    <a asp-action="GetAll" class="btn btn-outline-warning">Back to List</a>
</div>
