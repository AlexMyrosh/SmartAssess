@model Presentation_Layer.ViewModels.UserManagement.AllUsersViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["UserManagement"];
}
<div class="container-fluid">
    @if (Model.Users.Any())
    {
        <div class="form-floating mb-3">
            <input type="text" id="searchUsersInput" name="searchQuery" class="form-control" placeholder="@Localizer["SearchForUsers"]" aria-label="Search users" onkeyup="filterUsers()">
            <label for="searchUsersInput" class="form-label">@Localizer["SearchForUsers"]</label>
        </div>

        <div id="courseListAndPagination">
            @await Html.PartialAsync("PartialViews/_UserListAndPagination", Model)
        </div>
    }
    else
    {
        <div class="text-center" style="margin-top: 16%;">
            <h1 class="display-4">@Localizer["ThereIsNoOtherUsers"]</h1>
        </div>
    }
</div>

<!-- Modal For Role Update -->
<div class="modal fade" id="roleUpdateModalWindow" tabindex="-1" aria-labelledby="roleUpdateModalWindowLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <form id="roleUpdateForm" asp-action="UpdateUserRole" method="post">
                <input type="hidden" name="UserId" />
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="roleUpdateModalWindowLabel">@Localizer["UpdateUserRole"]</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @foreach (var role in new[] { RoleNames.Student, RoleNames.Teacher, RoleNames.Admin })
                    {
                        <div>
                            <input type="radio" id="@role" name="SelectedRole" value="@role" />
                            <label for="@role">@role</label>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Close"]</button>
                    <button type="submit" class="btn btn-success">@Localizer["Save"]</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        function filterUsers() {
            var searchQuery = $('#searchUsersInput').val();

            $.ajax({
                url: '@Url.Action("PaginateAllUsers", "UserManagement")',
                type: 'GET',
                data: { searchQuery: searchQuery, pageNumber: 1 },
                success: function (data) {
                    var parsedData = $.parseHTML(data);
                    var userListHtml = $(parsedData).filter('#userList').html();
                    var paginationHtml = $(parsedData).filter('#usersPaginationContainer').html();
                    if (userListHtml !== undefined && !isEmptyRow(userListHtml)) {
                        $('#userList').html(userListHtml);
                    } else {
                        $('#userList').html('<div class="text-center mt-5 mb-5"><h1>@Localizer["NothingFound"]</h1></div>');
                    }

                    if (paginationHtml !== undefined) {
                        $('#usersPaginationContainer').html(paginationHtml);
                    }
                }
            });
        }

        $(document).on('click', '.pagination-button', function (e) {
            e.preventDefault();
            var page = $(this).data('page');
            var searchQuery = $('#searchUsersInput').val();

            $.ajax({
                url: '@Url.Action("PaginateAllUsers", "UserManagement")',
                type: 'GET',
                data: { searchQuery: searchQuery, pageNumber: page },
                success: function (data) {
                    var parsedData = $.parseHTML(data);
                    var userListHtml = $(parsedData).filter('#userList').html();
                    var paginationHtml = $(parsedData).filter('#usersPaginationContainer').html();
                    if (userListHtml !== undefined) {
                        $('#userList').html(userListHtml);
                    }

                    if (paginationHtml !== undefined) {
                        $('#usersPaginationContainer').html(paginationHtml);
                    }
                }
            });
        });

        function isEmptyRow(htmlString) {
            var parsedRowValue = $($.parseHTML(htmlString)).filter('.row').html();
            return parsedRowValue.trim().length === 0
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var roleUpdateModal = document.getElementById('roleUpdateModalWindow');

            roleUpdateModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var userId = button.getAttribute('data-user-id');
                var userRole = button.getAttribute('data-user-role');

                var form = roleUpdateModal.querySelector('form');
                var hiddenUserIdInput = form.querySelector('input[name="UserId"]');
                hiddenUserIdInput.value = userId;

                var radios = form.querySelectorAll('input[name="SelectedRole"]');
                radios.forEach(function (radio) {
                    radio.checked = radio.value === userRole;
                });
            });
        });

        function openDeleteUserModal(button) {
            const userId = button.getAttribute('data-user-id');
            const userName = button.getAttribute('data-user-name');
            const form = document.getElementById(`deleteUserForm-${userId}`);
            document.getElementById('userNameInModalWindow').textContent = userName;
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteUserConfirmationModal'));
            deleteModal.show();
            document.getElementById('confirmUserDeleteButton').onclick = function () {
                form.submit();
            };
        }

    </script>
}