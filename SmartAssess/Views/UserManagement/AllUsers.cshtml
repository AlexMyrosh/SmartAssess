@model Presentation_Layer.ViewModels.UserManagement.AllUsersViewModel

@{
    ViewData["Title"] = "AllUsers";
}
<div class="container-fluid">
    @if (Model.Users.Any())
    {
        <div class="text-center">
            <h1 class="display-4">All users</h1>
        </div>
        <div class="form-floating mb-3">
            <input type="text" id="searchUsersInput" name="searchQuery" class="form-control" placeholder="Search users..." aria-label="Search users" onkeyup="filterUsers()">
            <label for="searchUsersInput" class="form-label">Search for users</label>
        </div>

        <div id="courseListAndPagination">
            @await Html.PartialAsync("PartialViews/_UserListAndPagination", Model)
        </div>
    }
    else
    {
        <div class="text-center" style="margin-top: 16%;">
            <h1 class="display-4">There is no other users</h1>
        </div>
    }
</div>

@section Scripts{
    <script>
        function filterUsers() {
            var searchQuery = $('#searchUsersInput').val();

            $.ajax({
                url: '@Url.Action("PaginateAllUsers", "UserManagement")',
                type: 'GET',
                data: { searchQuery: searchQuery, pageNumber: 1 },
                success: function (data) {
                    var parsedData = $.parseHTML(data);
                    var userListHtml = $(parsedData).filter('#userList').html();
                    var paginationHtml = $(parsedData).filter('#usersPaginationContainer').html();
                    if (userListHtml !== undefined && !isEmptyRow(userListHtml)) {
                        $('#userList').html(userListHtml);
                    } else {
                        $('#userList').html('<div class="text-center mt-5 mb-5"><h1>Nothing found</h1></div>');
                    }

                    if (paginationHtml !== undefined) {
                        $('#usersPaginationContainer').html(paginationHtml);
                    }
                },
                error: function () {
                    alert('Error loading users.');
                }
            });
        }

        $(document).on('click', '.pagination-button', function (e) {
            e.preventDefault();
            var page = $(this).data('page');
            var searchQuery = $('#searchUsersInput').val();

            $.ajax({
                url: '@Url.Action("PaginateAllUsers", "UserManagement")',
                type: 'GET',
                data: { searchQuery: searchQuery, pageNumber: page },
                success: function (data) {
                    var parsedData = $.parseHTML(data);
                    var userListHtml = $(parsedData).filter('#userList').html();
                    var paginationHtml = $(parsedData).filter('#usersPaginationContainer').html();
                    if (userListHtml !== undefined) {
                        $('#userList').html(userListHtml);
                    }

                    if (paginationHtml !== undefined) {
                        $('#usersPaginationContainer').html(paginationHtml);
                    }
                },
                error: function () {
                    alert('Error loading users.');
                }
            });
        });

        function isEmptyRow(htmlString) {
            var parsedRowValue = $($.parseHTML(htmlString)).filter('.row').html();
            return parsedRowValue.trim().length === 0
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var roleUpdateModal = document.getElementById('roleUpdateModalWindow');

            roleUpdateModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var userId = button.getAttribute('data-user-id');
                var userRole = button.getAttribute('data-user-role');

                var form = roleUpdateModal.querySelector('form');
                var hiddenUserIdInput = form.querySelector('input[name="UserId"]');
                hiddenUserIdInput.value = userId;

                var radios = form.querySelectorAll('input[name="SelectedRole"]');
                radios.forEach(function (radio) {
                    radio.checked = radio.value === userRole;
                });
            });
        });

        function openDeleteUserModal(button) {
            const userId = button.getAttribute('data-user-id');
            const userName = button.getAttribute('data-user-name');
            const form = document.getElementById(`deleteUserForm-${userId}`);
            document.getElementById('userNameInModalWindow').textContent = userName;
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteUserConfirmationModal'));
            deleteModal.show();
            document.getElementById('confirmUserDeleteButton').onclick = function () {
                form.submit();
            };
        }

    </script>
}