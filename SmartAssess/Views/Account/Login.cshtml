@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Presentation_Layer.ViewModels.Account.LoginViewModel

@{
    ViewData["Title"] = "Login";
    var outerRadius = 24;
    var innerRadius = outerRadius - 16;
    var outerRadiusResult = $"{outerRadius}px;";
    var innerRadiusResult = $"{innerRadius}px;";
}

<div class="d-flex justify-content-center align-items-center mb-3" style=" min-height: 84vh;">
    <div class="card text-center" style="width: 40rem; height: auto; border-radius: @outerRadiusResult">
        <div class="card-header">
            <h1 class="display-5">Login</h1>
        </div>
        <div class="card-body">
            <form method="post">

                <div class="form-floating mb-3">
                    <input asp-for="UserName" type="text" class="form-control form-control-lg" placeholder="Username" style="border-radius: @innerRadiusResult"/>
                    <label asp-for="UserName" class="form-label"></label>
                </div>

                <div class="form-floating mb-3">
                    <input asp-for="Password" type="password" class="form-control form-control-lg" placeholder="Password" style="border-radius: @innerRadiusResult"/>
                    <label asp-for="Password" class="form-label"></label>
                </div>

                <div class="container">
                    <div class="row">
                        <div class="col">
                            <input class="form-check-input" asp-for="RememberMe"/>
                            <label class="control-label" asp-for="RememberMe"></label>
                        </div>
                        <div class="col">
                            @Html.ActionLink("Forgot password?", "ForgotPassword", "Account", null, new { @class = "text-decoration-none" })
                        </div>
                    </div>
                </div>

                <br/>
                <div class="text-center">
                    <button type="submit" class="btn btn-primary btn-lg btn-block" style="width: -webkit-fill-available; border-radius: @innerRadiusResult">Login</button>
                </div>

                <div class="col text-center">
                    <span>Don't have an account?</span>
                    @Html.ActionLink("Register", "Register", "Account", null, new { @class = "text-decoration-none" })
                </div>

                @if (TempData["Notification"] != null)
                {
                    <br/>
                    <div class="alert alert-success" role="alert" style="border-radius: @innerRadiusResult">
                        <div class="row-fluid">
                            <div class="span12 text-center">
                                @TempData["Notification"]
                            </div>
                        </div>
                    </div>
                }

                @if (!ViewData.ModelState.IsValid)
                {
                    <br id="spaceBeforeErrorModal"/>
                    <div class="alert alert-danger alert-dismissible d-flex align-items-center fade show" style="border-radius: @innerRadiusResult margin-bottom: 0">
                        <i class="bi-exclamation-octagon-fill" style="font-size: 1.5em; line-height: 1;"></i>
                        <strong class="mx-2">Error!</strong> @string.Join(", ", ViewData.ModelState.SelectMany(ms => ms.Value.Errors).Select(e => e.ErrorMessage))
                        <button id="closeErrorsButton" type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/Form.js"></script>
}