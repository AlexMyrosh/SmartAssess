@model Presentation_Layer.ViewModels.Course.CourseDetailsViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Model.Name;
    var currentDateTime = DateTimeOffset.UtcNow;
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<div class="container-fluid" style="padding: 0;">
    <div class="decor-default">
        <div class="">
            <div class="contact">
                <div class="controls">
                    <div class="image-container">
                        <img src="/images/banners/banner-2.jpg">
                        <div class="centered">
                            <h1 class="display-1" style="font-size: 6vw; font-weight: 400;">
                                @Model.Name
                            </h1>
                        </div>
                        @if (Model.IsCurrentUserApplied)
                        {
                            @if (User.IsInRole(RoleNames.Student))
                            {
                                <form asp-controller="Course" asp-action="LeaveCourse" method="post">
                                    <input type="hidden" name="courseId" value="@Model.Id" />
                                    <button class=" btn btn-warning straddle-button">@Localizer["Leave"]</button>
                                </form>
                            }
                            else if (User.IsInRole(RoleNames.Teacher))
                            {
                                <form asp-controller="Course" asp-action="LeaveCourseAsTeacher" method="post">
                                    <input type="hidden" name="courseId" value="@Model.Id" />
                                    <button class=" btn btn-warning straddle-button">@Localizer["LeaveAsTeacher"]</button>
                                </form>
                            }
                        }
                        else
                        {
                            @if (User.IsInRole(RoleNames.Student))
                            {
                                <form asp-controller="Course" asp-action="ApplyForCourse" method="post">
                                    <input type="hidden" name="courseId" value="@Model.Id" />
                                    <button class="btn btn-success straddle-button">@Localizer["Apply"]</button>
                                </form>
                            }
                            else if (User.IsInRole(RoleNames.Teacher))
                            {
                                <form asp-controller="Course" asp-action="ApplyForCoursesAsTeacher" method="post">
                                    <input type="hidden" name="courseId" value="@Model.Id" />
                                    <button class="btn btn-success straddle-button">@Localizer["ApplyAsTeacher"]</button>
                                </form>
                            }
                        }
                        
                        @if ((Model.IsCurrentUserApplied && User.IsInRole(RoleNames.Teacher)) || User.IsInRole(RoleNames.Admin))
                        {
                            <div class="btn-group dropleft course-dropdown-menu">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fa fa-gear" style="font-size: 40px;"></i>
                                </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <div class="dropdown-item">
                                        <a asp-action="Create" asp-controller="Exam" asp-route-courseId="@Model.Id" class="btn btn-link" style="text-decoration: none; color: inherit;">@Localizer["CreateExam"]</a>
                                    </div>
                                    <div class="dropdown-item">
                                        <button type="button" class="btn btn-link" data-bs-toggle="modal" data-bs-target="#exampleModal" style="text-decoration: none; color: inherit;">@Localizer["ListOfStudents"]</button>
                                        <span class="badge text-bg-primary rounded-pill" style="background-color: grey;">@Model.AppliedUsers.Count</span>
                                    </div>
                                    <div class="dropdown-item">
                                        <button type="button" class="btn btn-link" data-bs-toggle="modal" data-bs-target="#RemoveCourse" style="text-decoration: none; color: inherit;">@Localizer["RemoveThisCourse"]</button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="container" style="margin-top: 30px; margin-bottom: 30px;">
                    <div class="text-center">
                        <h1 class="display-4">
                            @Localizer["CourseDescription"]
                            @if ((Model.IsCurrentUserApplied && User.IsInRole(RoleNames.Teacher)) || User.IsInRole(RoleNames.Admin))
                            {
                                <i id="editCourseDescriptionButton" class="fas fa-pencil-alt display-25 ms-3 me-3 clickable-icon" style="font-size:50%;"></i>
                            }
                        </h1>
                    </div>
                    @if (!string.IsNullOrWhiteSpace(Model.LongDescription))
                    {
                        <pre id="courseLongDescriptionDisplay" style="white-space: pre-line; font-family: 'Montserrat'; font-size: 16px;">
                            @Model.LongDescription
                        </pre>
                    }
                    else
                    {
                        <pre id="courseLongDescriptionDisplay" style="white-space: pre-line; font-family: 'Montserrat'; font-size: 16px; text-align: center;">
                            <i>
                                @Localizer["DescriptionIsAbsent"]
                            </i>
                        </pre>
                    }

                    <textarea class="form-control mb-2" id="courseLongDescriptionEdit" rows="4" style="display:none;"></textarea>
                    <button id="courseLongDescriptionSaveButton" style="display:none;" class="btn btn-success">
                        @Localizer["Save"]
                    </button>
                    <button id="courseLongDescriptionCancelButton" style="display:none;" class="btn btn-warning">
                        @Localizer["Cancel"]
                    </button>
                </div>

                @if (Model.IsCurrentUserApplied || User.IsInRole(RoleNames.Admin))
                {
                    <div class="container" style="margin-top: 30px; margin-bottom: 30px;">
                        <div class="text-center">
                            <h1 class="display-4">
                                @Localizer["OpenedExams"]
                            </h1>
                        </div>

                        @if (!Model.Exams.Any())
                        {
                            <p class="text-center" style="margin-top: 22px;">
                                @Localizer["NoExamsAtTheMoment"]
                            </p>
                        }
                        
                        @for (var i = 0; i < Model.Exams.Count; i++)
                        {
                            if (User.IsInRole(RoleNames.Student) && (Model.Exams[i].ExamStartDateTime > currentDateTime || Model.Exams[i].ExamEndDateTime < currentDateTime))
                            {
                                continue;
                            }

                            <div class="card text-center mb-4">
                                <div class="card-header" style="font-size: x-large; font-weight: 500;">
                                    @Model.Exams[i].Name
                                    @if ((Model.IsCurrentUserApplied && User.IsInRole(RoleNames.Teacher)) || User.IsInRole(RoleNames.Admin))
                                    {
                                        @if (currentDateTime > Model.Exams[i].ExamEndDateTime)
                                        {
                                            <span class="finalUserExamStatus not-assessed">@Localizer["TheDeadlineHasPassed"]</span>
                                        }
                                        else if (currentDateTime < Model.Exams[i].ExamStartDateTime)
                                        {
                                            <span class="finalUserExamStatus yellow-plank">@Localizer["TheStartDateHasNotYetArrived"]</span>
                                        }
                                        else
                                        {
                                            <span class="finalUserExamStatus passed">@Localizer["AvailableForPassing"]</span>
                                        }
                                    }
                                </div>
                                <div class="card-body" style="padding-bottom:0;">
                                    <p class="card-text">@Model.Exams[i].Description</p>
                                    
                                    <div class="row mb-4">
                                        @if (User.IsInRole(RoleNames.Student))
                                        {
                                            <div class="col d-flex align-items-stretch">
                                                <div class="card bg-c-blue order-card flex-fill">
                                                    <div class="card-body" style="padding: 0">
                                                        <h4 class="m-b-20 text-center">@Localizer["Attempts"]</h4>
                                                        <h5 class="text-center"><span>@Model.Exams[i].UserAttemptCount/@Model.Exams[i].MaxAttemptsAllowed</span></h5>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                        <div class="col d-flex align-items-stretch">
                                            <div class="card bg-c-blue order-card flex-fill">
                                                <div class="card-body" style="padding: 0">
                                                    <h4 class="m-b-20 text-center">@Localizer["ThresholdScore"]</h4>
                                                    <h5 class="text-center"><span>@Model.Exams[i].MinimumPassGrade</span></h5>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col d-flex align-items-stretch">
                                            <div class="card bg-c-blue order-card flex-fill">
                                                <div class="card-body" style="padding: 0">
                                                    <h4 class="m-b-20 text-center">@Localizer["Duration"]</h4>
                                                    <h5 class="text-center"><span>@Model.Exams[i].ExamDuration</span></h5>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col d-flex align-items-stretch">
                                            <div class="card bg-c-blue order-card flex-fill">
                                                <div class="card-body" style="padding: 0">
                                                    <h4 class="m-b-20 text-center">@Localizer["Questions"]</h4>
                                                    <h5 class="text-center"><span>@Model.Exams[i].NumberOfQuestions</span></h5>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="col d-flex align-items-stretch">
                                            <div class="card bg-c-blue order-card flex-fill">
                                                <div class="card-body" style="padding: 0">
                                                    <h4 class="m-b-20 text-center">@Localizer["FinalGradeMethod"]</h4>
                                                    <h5 class="text-center"><span>@Localizer[Model.Exams[i].FinalGradeCalculationMethod.ToString()]</span></h5>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col d-flex align-items-stretch">
                                            <div class="card bg-c-blue order-card flex-fill">
                                                <div class="card-body" style="padding: 0">
                                                    <h4 class="m-b-20 text-center">@Localizer["StartAt"]</h4>
                                                    <h5 class="text-center"><span>@Model.Exams[i].ExamStartDateTime.DateTime</span></h5>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col d-flex align-items-stretch">
                                            <div class="card bg-c-blue order-card flex-fill">
                                                <div class="card-body" style="padding: 0">
                                                    <h4 class="m-b-20 text-center">@Localizer["EndAt"]</h4>
                                                    <h5 class="text-center"><span>@Model.Exams[i].ExamEndDateTime.DateTime</span></h5>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-footer text-muted">
                                    @if (User.IsInRole(RoleNames.Student))
                                    {
                                        @if (Model.Exams[i].StartedAttemptId != null)
                                        {
                                            @Html.ActionLink(@Localizer["ContinueAttempt"].Value, "TakeExam", "ExamAssessment", new { examId = Model.Exams[i].Id }, new { @class = "btn btn-success" })
                                        }
                                        else if (Model.Exams[i].UserAttemptCount >= Model.Exams[i].MaxAttemptsAllowed)
                                        {
                                            <button class="btn btn-success disabled">Start attempt</button>
                                        }
                                        else
                                        {
                                            @Html.ActionLink(@Localizer["StartAttempt"].Value, "TakeExam", "ExamAssessment", new { examId = Model.Exams[i].Id }, new { @class = "btn btn-success" })
                                        }
                                    }
                                    else if ((Model.IsCurrentUserApplied && User.IsInRole(RoleNames.Teacher)) || User.IsInRole(RoleNames.Admin))
                                    {
                                        <div class="d-flex align-items-stretch justify-content-center">
                                            @Html.ActionLink(@Localizer["CheckAnswers"].Value, "Result", "Exam", new { id = Model.Exams[i].Id }, new { @class = "btn btn-success me-2 d-flex align-items-center justify-content-center" })
                                            @Html.ActionLink(@Localizer["Statistics"].Value, "Statistic", "Exam", new { id = Model.Exams[i].Id }, new { @class = "btn btn-info me-2 d-flex align-items-center justify-content-center" })
                                            @Html.ActionLink(@Localizer["Details"].Value, "Details", "Exam", new { id = Model.Exams[i].Id }, new { @class = "btn btn-secondary me-2 d-flex align-items-center justify-content-center" })
                                            @Html.ActionLink(@Localizer["Update"].Value, "Update", "Exam", new { id = Model.Exams[i].Id }, new { @class = "btn btn-warning me-2 d-flex align-items-center justify-content-center" })
                                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#RemoveExam-@Model.Exams[i].Id">@Localizer["Remove"]</button>
                                            <form asp-action="Delete" asp-controller="Exam" method="post">
                                                <input type="hidden" name="examId" value="@Model.Exams[i].Id" />
                                                <input type="hidden" name="courseId" value="@Model.Id"/>
                                                @await Html.PartialAsync("_DeleteConfirmationModal", ($"RemoveExam-{Model.Exams[i].Id}", $"\"{Model.Exams[i].Name}\" {@Localizer["Exam"].Value}"))
                                            </form>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Vertically centered modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">@Localizer["Students"]</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (Model.AppliedUsers.Count > 0)
                {
                    <ul class="list-group list-group-flush">
                        @foreach (var student in Model.AppliedUsers)
                        {
                            <li class="list-group-item">
                                <div class="row">
                                    <div class="col-9">
                                        @student.FirstName @student.LastName
                                    </div>
                                    <div class="col-3">
                                        <button data-user-id="@student.Id" class="btn btn-danger" onclick="removeStudent(this)">@Localizer["Remove"]</button>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-center">@Localizer["NoStudentsInThisCourse"]</p>
                }
            </div>
        </div>
    </div>
</div>

<form asp-controller="Course" asp-action="Delete" method="post">
    <input type="hidden" name="id" value="@Model.Id" />
    @await Html.PartialAsync("_DeleteConfirmationModal", ("RemoveCourse", $"\"{Model.Name}\" {@Localizer["Course"].Value}"))
</form>

@section Scripts {
    <script>
        function removeStudent(button) {
            const listItem = button.closest('li');
            const userId = button.getAttribute('data-user-id');

            $.ajax({
                url: '@Url.Action("RemoveUserFromCourse", "Course")',
                type: 'POST',
                data: { 
                    courseId: '@Model.Id', 
                    userId: userId
                },
                success: function (response) {
                    if (response.success) {
                        listItem.remove();
                    }
                }
            });
        }
    </script>

    <script>
        $(function () {
            $('#editCourseDescriptionButton').on('click', function () {
                var descriptionHeight = $('#courseLongDescriptionDisplay').height();
                $('#courseLongDescriptionDisplay').hide();
                $('#courseLongDescriptionEdit').val($('#courseLongDescriptionDisplay').text().trim()).show().height(descriptionHeight + 20);
                $('#courseLongDescriptionSaveButton').show();
                $('#courseLongDescriptionCancelButton').show();
                $(this).hide();
            });

            $('#courseLongDescriptionSaveButton').on('click', function () {
                debugger;
                var newLongDescription = $('#courseLongDescriptionEdit').val().trim();;
                $.ajax({
                    url: '@Url.Action("UpdateLongDescription", "Course")',
                    type: 'POST',
                    data: { courseId: '@Model.Id', longDescription: newLongDescription },
                    success: function (response) {
                        if (response.success) {
                            $('#courseLongDescriptionDisplay').text(newLongDescription).show();
                            $('#courseLongDescriptionEdit').hide();
                            $('#editCourseDescriptionButton').show();
                            $('#courseLongDescriptionSaveButton').hide();
                            $('#courseLongDescriptionCancelButton').hide();
                        }
                    }
                });
            });

            $('#courseLongDescriptionCancelButton').on('click', function () {
                $('#courseLongDescriptionDisplay').show();
                $('#courseLongDescriptionEdit').hide();
                $('#editCourseDescriptionButton').show();
                $('#courseLongDescriptionSaveButton').hide();
                $('#courseLongDescriptionCancelButton').hide();
            });
        });
    </script>
}