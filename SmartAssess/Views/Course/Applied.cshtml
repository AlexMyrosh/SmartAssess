@model Presentation_Layer.ViewModels.Course.AppliedCoursesViewModel

@{
    ViewData["Title"] = "My courses";
}

<div class="container-fluid custom-container" style="width: 90%;">
    <div class="d-flex justify-content-between align-items-center">
        <h1 class="mx-auto text-center">My courses</h1>
        @if (User.IsInRole(RoleNames.Teacher))
        {
            <button type="button" class="btn btn-primary" style="border-radius: 25px;" data-bs-toggle="modal" data-bs-target="#newCourseCreationModal">
                Create new course
            </button>
        }
    </div>

    @if (Model.CourseListWithPagination.Courses.Any())
    {
        <div class="form-floating mb-3">
            <input type="text" id="searchInput" name="searchQuery" class="form-control" placeholder="Search courses..." aria-label="Search courses" onkeyup="filterCourses()">
            <label for="searchInput" class="form-label">Search for courses</label>
        </div>

        <div id="courseListAndPagination">
            @Html.Partial("PartialViews/_CourseListAndPagination", Model.CourseListWithPagination)
        </div>
    }
    else
    {
        <div class="d-flex justify-content-center align-items-center" style="min-height: calc(100vh - 185px);">
            <div class="text-center">
                <h3>It looks like you’re not enrolled in any courses right now</h3>
            </div>
        </div>
    }
</div>

<!-- Modal For Course Creation-->
<div class="modal fade" id="newCourseCreationModal" tabindex="-1" aria-labelledby="newCourseCreationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <form id="createCourseForm" action="/Course/Create" method="post">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="newCourseCreationModalLabel">Create new course</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-floating mb-3">
                        <input asp-for="CreatedCourse.Name" class="form-control" id="courseNameFloatingInput" />
                        <label for="courseNameFloatingInput">Course Name</label>
                    </div>
                    <div class="form-floating">
                        <textarea asp-for="CreatedCourse.LongDescription" class="form-control" style="max-height: 50vh; min-height: 20vh;" id="courseLongDescriptionfloatingTextarea"></textarea>
                        <label for="courseLongDescriptionfloatingTextarea">Course Description</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-success">Create</button>
                </div>
            </form>

        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $('#createCourseForm').submit(function (event) {
        event.preventDefault(); // Prevent default form submission
        var newCourseNameValue = $('#courseNameFloatingInput').val();
        var newCourseLongDescriptionValue = $('#courseLongDescriptionfloatingTextarea').val();
        var form = $(this);
        var formData = form.serialize(); // Serialize the form data for sending
        $.ajax({
            url: '@Url.Action("Create", "Course")',
            type: 'POST',
            data: { Name: newCourseNameValue, LongDescription: newCourseLongDescriptionValue },
            success: function (response) {
                if (response.success) {
                    console.log(response);
                    window.location.href = `/Course/Details/${response.courseId}`;
                } else {
                    console.error('Form submission failed:', response.errors);
                }
            },
            error: function () {
                console.error('Error submitting the form.');
            }
        });
    });
</script>

<script>
    function filterCourses() {
        var searchQuery = $('#searchInput').val();
        const url = '@Model.CurrentUserRole' === '@RoleNames.Student' ? '@Url.Action("PaginateAppliedCourses", "Course")' : '@Url.Action("PaginateAppliedByTeacherCourses", "Course")';
        $.ajax({
            url: url,
            type: 'GET',
            data: { searchQuery: searchQuery, pageNumber: 1 }, // Reset to first page on search
            success: function (data) {
                var parsedData = $.parseHTML(data);

                var courseListHtml = $(parsedData).filter('#courseList').html();
                var paginationHtml = $(parsedData).filter('#paginationContainer').html();
                if (courseListHtml !== undefined && !isEmptyRow(courseListHtml)) {
                    $('#courseList').html(courseListHtml);
                } else {
                    $('#courseList').html('<div class="text-center mt-5 mb-5"><h1>Nothing found</h1></div>');
                }

                if (paginationHtml !== undefined) {
                    $('#paginationContainer').html(paginationHtml);
                }
            },
            error: function () {
                alert('Error loading courses.');
            }
        });
    }

    function isEmptyRow(htmlString) {
        var parsedRowValue = $($.parseHTML(htmlString)).filter('.row').html();
        return parsedRowValue.trim().length === 0
    }

    $(document).on('click', '.pagination-button', function (e) {
        e.preventDefault();
        var page = $(this).data('page');
        var searchQuery = $('#searchInput').val();
        const url = '@Model.CurrentUserRole' === '@RoleNames.Student' ? '@Url.Action("PaginateAppliedCourses", "Course")' : '@Url.Action("PaginateAppliedByTeacherCourses", "Course")';
        $.ajax({
            url: url,
            type: 'GET',
            data: { searchQuery: searchQuery, pageNumber: page },
            success: function (data) {
                // Parse the HTML response into DOM elements
                var parsedData = $.parseHTML(data);

                // Extract the course list and pagination content
                var courseListHtml = $(parsedData).filter('#courseList').html();
                var paginationHtml = $(parsedData).filter('#paginationContainer').html();

                // Update the HTML content on the page
                if (courseListHtml !== undefined) {
                    $('#courseList').html(courseListHtml);
                }

                if (paginationHtml !== undefined) {
                    $('#paginationContainer').html(paginationHtml);
                }
            },
            error: function () {
                alert('Error loading courses.');
            }
        });
    });
</script>