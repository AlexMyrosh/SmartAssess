@using System.Text.RegularExpressions
@model Presentation_Layer.ViewModels.ExamAssessment.TakenExamDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

<div class="container-fluid" style="padding: 0;">
    <div class="decor-default">
        <div class="">
            <div class="contact">
                <div class="controls">
                    <div class="image-container">
                        <img src="/images/banners/banner-4.jpg">
                        <div class="centered">
                            <h1 class="display-1" style="font-size: 6vw; font-weight: 400;">
                                @Model.ExamName
                            </h1>
                        </div>
                    </div>
                </div>

                <div class="container" style="margin-top: 30px;">
                    <div class="text-center">
                        <h1 class="display-4">Exam description</h1>
                    </div>
                    <pre>
                        @Model.ExamDescription
                    </pre>
                    <div class="container mt-5">
                        <div class="container">
                            <div class="row">
                                @if (Model.IsExamAssessed)
                                {
                                    <div class="col d-flex align-items-stretch mb-3">
                                        <div class="card bg-c-blue order-card flex-fill">
                                            <div class="card-body">
                                                <h2 class="m-b-20 text-center">Exam grade</h2>
                                                <h3 class="text-center"><span>@Model.TotalGrade of @Model.MaxPossibleExamGrade</span></h3>
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col d-flex align-items-stretch mb-3">
                                        <div class="card bg-c-blue order-card flex-fill">
                                            <div class="card-body">
                                                <h2 class="m-b-20 text-center">Max possible grade</h2>
                                                <h3 class="text-center"><span>@Model.MaxPossibleExamGrade</span></h3>
                                            </div>
                                        </div>
                                    </div>
                                }

                                <div class="col d-flex align-items-stretch mb-3">
                                    <div class="card bg-c-teal order-card flex-fill">
                                        <div class="card-body">
                                            <h2 class="m-b-20 text-center">Time to complete</h2>
                                            <h3 class="text-center"><span>@Model.TakenTimeToComplete.ToString(@"hh\:mm\:ss")</span></h3>
                                        </div>
                                    </div>
                                </div>

                                <div class="col d-flex align-items-stretch mb-3">
                                    <div class="card bg-c-indigo order-card flex-fill">
                                        <div class="card-body">
                                            <h2 class="m-b-20 text-center">Threshold score</h2>
                                            <h3 class="text-center"><span>@Model.MinExamPassGrade</span></h3>
                                        </div>
                                    </div>
                                </div>

                                @if (Model.IsExamAssessed)
                                {
                                    @if (Model.TotalGrade >= Model.MinExamPassGrade)
                                    {
                                        <div class="col d-flex align-items-stretch mb-3">
                                            <div class="card bg-c-green order-card flex-fill">
                                                <div class="card-body">
                                                    <h2 class="m-b-20 text-center">PASSED</h2>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col d-flex align-items-stretch mb-3">
                                            <div class="card bg-c-red order-card flex-fill">
                                                <div class="card-body">
                                                    <h2 class="text-center">FAILED</h2>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="col d-flex align-items-stretch mb-3">
                                        <div class="card bg-c-yellow order-card flex-fill">
                                            <div class="card-body">
                                                <h2 class="text-center">Exam is not assessed yet</h2>
                                            </div>
                                        </div>
                                    </div>
                                }


                                @if (Model.IsExamAssessed)
                                {
                                    @if (Model.IsAssessedByAi)
                                    {
                                        <div class="col d-flex align-items-stretch mb-3">
                                            <div class="card bg-c-purple order-card flex-fill">
                                                <div class="card-body">
                                                    <h2 class="m-b-20 text-center">Assessed by AI</h2>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col d-flex align-items-stretch mb-3">
                                            <div class="card bg-c-cyan order-card flex-fill">
                                                <div class="card-body">
                                                    <h2 class="m-b-20 text-center">Assessed manually</h2>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
                @if (!string.IsNullOrWhiteSpace(Model.GeneralFeedback))
                {
                    <div class="container">
                        <div class="text-center">
                            <h1 class="display-4">Overall exam feedback</h1>
                        </div>

                        <pre>
                            @Html.Raw(Regex.Replace(Model.GeneralFeedback, @"\*\*(.*?)\*\*", "<strong>$1</strong>"))
                        </pre>
                    </div>
                }

                <div class="container" style="=margin-bottom: 30px;">
                    <div class="text-center">
                        <h1 class="display-4">Questions & Answers</h1>
                    </div>
                    @for (var i = 0; i < Model.QuestionAnswers.Count; i++)
                    {
                        <div class="card mb-3 question" style="background-color: #f2f2f2; border-radius: 15px;">
                            <div class="card-body">
                                <h5 class="card-title text-center">Question @(i + 1)</h5>
                                <p class="card-text text-center">@Model.QuestionAnswers[i].QuestionText</p>
                                <h5 class="card-title text-center">Answer</h5>
                                @if (string.IsNullOrWhiteSpace(Model.QuestionAnswers[i].AnswerText))
                                {
                                    <p class="card-text text-center"><em>No answer provided...</em></p>
                                }
                                else
                                {
                                    <pre>@Model.QuestionAnswers[i].AnswerText</pre>
                                }
                                
                                @if (Model.IsExamAssessed)
                                {
                                    <p><strong>Grade:</strong> @Model.QuestionAnswers[i].Grade of @Model.QuestionAnswers[i].QuestionMaxGrade</p>
                                }

                                @if (!string.IsNullOrWhiteSpace(Model.QuestionAnswers[i].QuestionAnswerFeedback))
                                {
                                    <h5 class="card-title">Feedback</h5>
                                    <pre>
                                        @Html.Raw(Regex.Replace(Model.QuestionAnswers[i].QuestionAnswerFeedback, @"\*\*(.*?)\*\*", "<strong>$1</strong>"))
                                    </pre>

                                }
                            </div>
                        </div>
                    }
                    
                    <div class="container d-flex justify-content-center">
                        <nav aria-label="Page navigation example">
                            <ul class="pagination" id="pagination-nav">
                                @for (int i = 0; i < Model.QuestionAnswers.Count; i++)
                                {
                                    <li class="page-item me-2" data-page="@i">
                                        <a class="page-link" href="javascript:void(0);" onclick="showQuestion(@i)">
                                            @(i + 1)
                                        </a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize to show the first question
        showQuestion(0);
    });

    function showQuestion(currentPage) {
        let allPageItems = document.querySelectorAll('#pagination-nav .page-item');
        let allQuestions = document.querySelectorAll(".question");

        // Update the active class on pagination items
        allPageItems.forEach((item, index) => {
            if (index === currentPage) {
                item.classList.add('active');
            } else {
                item.classList.remove('active');
            }
        });

        // Display the corresponding question
        allQuestions.forEach((item, index) => {
            if (index === currentPage) {
                item.classList.add('active');
            } else {
                item.classList.remove('active');
            }
        });
    }
</script>